@model IEnumerable<AI_Web_App.Models.BookCatalog>

@{
    ViewBag.Title = "Katalog książek";
}

<h2>Katalog</h2>

<p>
    @Html.ActionLink("Create New", "Create", routeValues: new { }, htmlAttributes: new { @class = "btn btn - primary" })
    @Html.ActionLink("Add from database", "AddFromDatabase", routeValues: new { }, htmlAttributes: new { @class = "btn btn - primary" })
    @Html.ActionLink("Add from website", "AddFromWebsite", routeValues: new { }, htmlAttributes: new { @class = "btn btn - primary" })
    @Html.ActionLink("Invite to database", "Invite", routeValues: new { }, htmlAttributes: new { @class = "btn btn - primary" })
    @Html.ActionLink("Return to account", "Index","CatalogUsers", routeValues: new { }, htmlAttributes: new { @class = "btn btn - primary" })

</p>
@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" class="btn btn - primary" value="Search" />
    </p>
}
<table class="table table-hover">
    <tr class="table-primary">
        <th scope="col">
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Owner)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Artist)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Wydawnictwo)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Loan)
        </th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <th scope="row">
            @Html.DisplayFor(model => item.Id)
        </th>
        <th>
            @Html.DisplayFor(model => item.Name)
        </th>
        <th>
            @Html.DisplayFor(model => item.Owner)
        </th>
        <th>
            @Html.DisplayFor(model => item.Artist)
        </th>
        <th>
            @Html.DisplayFor(model => item.Wydawnictwo)
        </th>
        <th>
            @Html.DisplayFor(model => item.Loan)
        </th>
        <th>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn - primary" }) 
            @Html.ActionLink("Details", "Details", new { id = item.Id }, htmlAttributes: new { @class = "btn btn - primary" }) 
            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn - primary" }) 
            @if (item.Loan.Equals(AI_Web_App.Models.Loan.None) && !item.Reading)
            {
                @Html.ActionLink("Lend", "Lend", new { id = item.Id }, htmlAttributes: new { @class = "btn btn - primary" })}
            @if (!item.Loan.Equals(AI_Web_App.Models.Loan.None) && !item.Reading)
            {
                @Html.ActionLink("Return", "Return", new { id = item.Id }, htmlAttributes: new { @class = "btn btn - primary" })}
        </th>
        <th>
            @if (!item.Reading && item.Owner == System.Web.HttpContext.Current.User.Identity.Name)
            {
                <input type="submit" value="Read" class="btn btn - primary" onclick="location.href='@Url.Action("Read", "BookCatalogs", new { id = item.Id })'" />
            }
            else if(item.Owner == System.Web.HttpContext.Current.User.Identity.Name)
            {
                <input type="submit" value="Stop reading" class="btn btn - primary" onclick="location.href='@Url.Action("Read", "BookCatalogs", new { id = item.Id })'" />
            }
        </th>
    </tr>
    }

</table>
